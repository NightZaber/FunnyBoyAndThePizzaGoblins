//----------------------------------------------------------------------------------------------------
// game_start
//----------------------------------------------------------------------------------------------------
function game_start() 
{
}

//----------------------------------------------------------------------------------------------------
// repeatedly_execute
//----------------------------------------------------------------------------------------------------
function repeatedly_execute() 
{
  //Determine Where the Action Text Should Be, Then Place It
  //Action Text is on Right
  if (mouse.x < 266)
    {
      lblActionText.Visible = true;
      lblActionText1.Visible = false;
      gActionText.X = mouse.x;
      gActionText.Y = mouse.y;
    }
  else
    {
      lblActionText.Visible = false;
      lblActionText1.Visible = true;
      gActionText.X = (mouse.x - 132);
      gActionText.Y = mouse.y;
    }
  
 
//FIGURE OUT STUFF FOR THE MAIN MENU
  if (gMainMenu.Visible == true)
  {
  //If ESC pressed, get the menu out of here, please
  if (IsKeyPressed(eKeyEscape)) gMainMenu.Visible = false;
  {
      if (MAINMENULAYER == 0) // MAIN MENU
        {
          //Set the sprite to what it needs to be
          gMainMenu.BackgroundGraphic = 130;
          
          //Make the things that need to be visible visible
          btnMainMenu_RestartGame.Visible = true;
          btnMainMenu_LoadGame.Visible = true;
          btnMainMenu_LoadAutosave.Visible = true;
          btnMainMenu_AboutGame.Visible = true;
          btnMainMenu_Credits.Visible = true;
          btnMainMenu_BacktoGame.Visible = true;
          
          //Make the things that need to not be visible invisible
          btn_OptionsMenu_VolumeSlider.Visible = false;
          btn_OptionsMenu_SpeedSlider.Visible = false;
          btn_OptionsMenu_ToggleFullscreen.Visible = false;
          btn_QuitGame.Visible = false;
          
          //Highlight the correct button, don't highlight the others
          btn_MainMenu.NormalGraphic = 132;
          btn_Options.NormalGraphic = 133;
          btn_ExitGame.NormalGraphic = 135;
          
          //Only Show the HUD when everything is sorted out
          gMainMenu.Transparency = 0;
        }
      else if (MAINMENULAYER == 1) //OPTIONS MENU
        {
          //Set the sprite to what it needs to be
          gMainMenu.BackgroundGraphic = 148;
          
          //Make the things that need to be visible visible
          btn_OptionsMenu_VolumeSlider.Visible = true;
          btn_OptionsMenu_SpeedSlider.Visible = true;
          btn_OptionsMenu_ToggleFullscreen.Visible = true;
          
          //Make the things that need to not be visible invisible
          btnMainMenu_RestartGame.Visible = false;
          btnMainMenu_LoadGame.Visible = false;
          btnMainMenu_LoadAutosave.Visible = false;
          btnMainMenu_AboutGame.Visible = false;
          btnMainMenu_Credits.Visible = false;
          btnMainMenu_BacktoGame.Visible = false;
          btn_QuitGame.Visible = false;
          
          //Highlight the correct button, don't highlight the others
          btn_MainMenu.NormalGraphic = 131;
          btn_Options.NormalGraphic = 134;
          btn_ExitGame.NormalGraphic = 135;
        }
      else if (MAINMENULAYER == 2) //QUIT GAME
        {
          //Set the sprite to what it needs to be
          gMainMenu.BackgroundGraphic = 151;
          
          //Make the things that need to be visible visible
          btn_QuitGame.Visible = true;
          
          //Make the things that need to not be visible invisible
          btnMainMenu_RestartGame.Visible = false;
          btnMainMenu_LoadGame.Visible = false;
          btnMainMenu_LoadAutosave.Visible = false;
          btnMainMenu_AboutGame.Visible = false;
          btnMainMenu_Credits.Visible = false;
          btnMainMenu_BacktoGame.Visible = false;
          
          btn_OptionsMenu_VolumeSlider.Visible = false;
          btn_OptionsMenu_SpeedSlider.Visible = false;
          btn_OptionsMenu_ToggleFullscreen.Visible = false;
          
          //Highlight the correct button, don't highlight the others
          btn_MainMenu.NormalGraphic = 131;
          btn_Options.NormalGraphic = 133;
          btn_ExitGame.NormalGraphic = 136;
        }
    }
  }
}

//----------------------------------------------------------------------------------------------------
// repeatedly_execute_always
//----------------------------------------------------------------------------------------------------
function repeatedly_execute_always() 
{
}

//----------------------------------------------------------------------------------------------------
// on_key_press
//----------------------------------------------------------------------------------------------------
function on_key_press(eKeyCode keycode) 
{
  if (IsGamePaused()) keycode = 0;
  
  // "System Keys"
  if (keycode == eKeyCtrlQ) QuitGame(1); // Ctrl-Q
  if (keycode == eKeyF9) RestartGame(); // F9
  if (keycode == eKeyF12) SaveScreenShot("scrnshot.pcx");  // F12
  
  // Debugger Keys
  if (keycode == eKeyCtrlS) Debug(0,0); // Ctrl-S, give all inventory
  if (keycode == eKeyCtrlV) Debug(1,0); // Ctrl-V, version
  if (keycode == eKeyCtrlA) Debug(2,0); // Ctrl-A, show walkable areas
  if (keycode == eKeyCtrlX) Debug(3,0); // Ctrl-X, teleport to room
}

//----------------------------------------------------------------------------------------------------
// on_mouse_click
//----------------------------------------------------------------------------------------------------
function on_mouse_click(MouseButton button)
{
	// all mouse clicks are handled in TwoClickHandler.asc!
}

//----------------------------------------------------------------------------------------------------
// on_event
//----------------------------------------------------------------------------------------------------
function on_event (EventType event, int data) 
{
}

//----------------------------------------------------------------------------------------------------
// unhandled_event
//----------------------------------------------------------------------------------------------------
function unhandled_event (int what, int type) 
{
	if (what == 1) // Unhandled events for HOTSPOTS
	{
		if (type == 1) // look
		{
			player.Say("I see nothing special about it.");
		}
		if (type == 2) // interact
		{
			player.Say("I can't do anything with it.");
		}
		if (type == 3) // use inv on
		{
			player.Say("That won't do anything.");
		}
	}
	if (what == 2) // Unhandled events for OBJECTS
	{
		if (type == 0) // look
		{
			player.Say("Looks alright.");
		}
		if (type == 1) // interact
		{
			player.Say("I don't want to have it.");
		}
		if (type == 3) // use inv on
		{
			player.Say("That's a funny idea.");
		}
	}
	if (what == 3) // Unhandled events for CHARACTERS
	{
		if (type == 0) // look
		{
			player.Say("Hm.");
		}
		if (type == 1) // interact
		{
			player.Say("Got nothing to say.");
		}
		if (type == 3) // use inv on
		{
			player.Say("I don't think I should give that away.");
		}
	}
	if (what == 5) // Unhandled events for INVENTORY ITEMS
	{
		if (type == 0) // look
		{
			player.Say("It's just some junk in my inventory.");
		}
		if (type == 1) // interact
		{
			player.Say("Er, no?");
		}
		if (type == 3) // use inv on
		{
			player.Say("That's ridiculous.");
		}
	}
}

//----------------------------------------------------------------------------------------------------
// dialog_request
//----------------------------------------------------------------------------------------------------
function dialog_request(int param) 
{
}

//----------------------------------------------------------------------------------------------------
// gInventoryBar
//----------------------------------------------------------------------------------------------------
function btnInvScrollLeft_OnClick(GUIControl *control, MouseButton button)
{
	InventoryWindow1.ScrollDown();
}

function btnInvScrollRight_OnClick(GUIControl *control, MouseButton button)
{
	InventoryWindow1.ScrollUp();
}

function cEgo_Look()
{
  Display("This is a mighty fine specimen!");
}

function cEgo_Interact()
{
  Display("You lubricate your hands with your greasy forehead.");
}

function cEgo_Talk()
{
  if (cMavish.Room == 4)
    {
      cMavish.Say("&42 Sure is cold down here.");
    }
  else
    {
      cMavish.Say("&1 Yeah, I do . . .");
    }
}

//START OF CONTROL PANEL FUNCTIONS
function btnSave_OnClick(GUIControl *control, MouseButton button)
{
  mouse.UseDefaultGraphic();
  Wait(1);
}

function gControl_OnClick(GUI *theGui, MouseButton button)
{

}



function Badge_Look()
{
  Display("This is your detective badge. It's what gives you your authority.");
}

function Brick_Look()
{
  Display("It's a healthy-looking brick.");
}

function Shoes_Look()
{
  if (cMavish.HasInventory(Laces))
    {
      Display("It's Chris Johnson's shoes.");
    }
  else
    {
      Display("It's Chris Johnson's shoes. They are tied with white shoe laces.");
    }
}


function Laces_Look()
{
  Display("It's Chris Johnson's shoe laces. They're fairly durable.");
}

function cMavish_UseInv()
{
  //ALL THE BULLSHIT FOR SHOES
  if (cMavish.ActiveInventory == Shoes)
    {
      if (cMavish.HasInventory(Laces))
        {
          Display("You've already delaced Chris Johnson's shoes.");
        }
      else
        {
          aDELACE.Play();
          Display("You delace the shoes.");
          cMavish.AddInventory(Laces);
        }
    }
    
  //EATING THE GODDAMN SANDWICH
  if (cMavish.ActiveInventory == Sandwich)
    {
      aEAT_SANDWICH.Play();
      Display("You eat the sandwich. It is delightfully crunchy.");
      cMavish.LoseInventory(Sandwich);
    }
    
  //RUBBING HIMSELF IN MONEY
  if (cMavish.ActiveInventory == Cash)
    {
      if (cMavish.Room == 4)
        {
          //Check if he's in the subway tunnel to use reverb version
          cMavish.Say("&43 Now's not the time to rub myself in money.");
        }
      else 
        {
           cMavish.Say("&9 Now's not the time to rub myself in money.");
        }
    }
  
  //TRYING TO SWALLOW KEY
  if (cMavish.ActiveInventory == Key)
    {
      cMavish.Say("&30 If I swallow this key, I'll die.");
    }
}

function Shoes_UseInv()
{
  if (cMavish.ActiveInventory == Brick)
    {
      if (cMavish.HasInventory(Cash))
        {
          Display("The heel of the shoe is already split apart; any further and they might turn to dust!");
        }
       else
        {
          aHAMMER_SHOES.Play();
          Display("Using the brick, you break apart the heel of Chris Johnson's shoes, revealing a sizeable stack of cash!");
          cMavish.AddInventory(Cash);
        }
    }
    
  if (cMavish.ActiveInventory == Laces)
    {
      aRELACE.Play();
      Display("You lace Chris Johnson's shoes.");
      cMavish.LoseInventory(Laces);
    }
}

function Cash_Look()
{
  Display("It's $20,507 in cold, hard cash.");
}

function Sandwich_Look()
{
  Display("It's a ham and cheese sandwich, wrapped in plastic.");
}

function Gun_Look()
{
  Display("It's your service revolver. It has %d bullets in it.", Ammo);
}

function Receipt_Look()
{
  Display("It's a receipt for $20,507 at a local pawn shop.");
  CHRISJOHNSON_FLAGS01 = true;
}

function Magnet_Look()
{
  Display("It's a very friendly fridge magnet with a very strong pull.");
}

function Key_Look()
{
  Display("It's the key to your office. Try not to lose it next time.");
}
function cHaynes_Talk()
{
  if (cMavish.Room == 4)
    {
      cMavish.Walk(126, 126, eBlock, eWalkableAreas);
      cHaynes.FaceDirection(eDirectionLeft);
      cHaynes.Say("&6 What is it, Mavish?");
      dDialog1.Start();
    }
}

function gInventory_OnClick(GUI *theGui, MouseButton button)
{

}

function cHaynes_UseInv()
{
  if (cMavish.ActiveInventory == Shoes)
    {
      if (haynescheckshoes == false &! cMavish.HasInventory(Cash))
        {
      cMavish.Say("&64 What do you think of these?");
      cHaynes.Say("&20 There's no dirt on his shoes. That's how we know he was dragged to this location.");
      cMavish.Say("&65 Maybe the killer really liked to shine shoes.");
      cHaynes.Say("&21 Maybe.");
      cMavish.Say("&66 For some reason they feel really heavy.");
      cHaynes.Say("&22 There's something hidden inside the heel.");
      haynescheckshoes = true;
        }
      else if (cMavish.HasInventory(Cash))
        {
      cMavish.Say("&64 What do you think of these?");
      cHaynes.Say("&24 They're the same shoes you showed me before, but you broke the heel.");
      dDialog2.Start();
        }
      else
        {
      cMavish.Say("&64 What do you think of these?");
      cHaynes.Say("&23 I think they're just the same shoes you showed me thirty seconds ago.");
        }
    }
  if (cMavish.ActiveInventory == Brick)
    {
      cMavish.Say("&68 What do you think of this?");
      cHaynes.Say("&25 Hmm . . .");
      cHaynes.Say("&26 Brick.");
      cMavish.Say("&70 Thanks.");
    }
  if (cMavish.ActiveInventory == Badge)
    {
      cMavish.Say("&68 What do you think of this?");
      cHaynes.Say("&25 Hmm . . .");
      cHaynes.Say("&72 Nice badge.");
      cMavish.Say("&70 Thanks.");
    }
  if (cMavish.ActiveInventory == Gun)
    {
      cMavish.Say("&68 What do you think of this?");
      cHaynes.Say("&25 Hmm . . .");
      cHaynes.Say("&27 Cool revolver.");
      cMavish.Say("&70 Thanks.");
    }
}

function btnMenu_OnClick(GUIControl *control, MouseButton button)
{
  gMainMenu.Visible = true;
  gInventoryBar.Visible = false;
}

function btn_OptionsMenu_VolumeSlider_OnChange(GUIControl *control)
{
  System.Volume=(btn_OptionsMenu_VolumeSlider.Value);
  SetSpeechVolume(btn_OptionsMenu_VolumeSlider.Value); 
}

function btn_OptionsMenu_SpeedSlider_OnChange(GUIControl *control)
{
  SetGameSpeed(btn_OptionsMenu_SpeedSlider.Value);
}

function btn_OptionsMenu_ToggleFullscreen_OnClick(GUIControl *control, MouseButton button)
{
    System.Windowed = !System.Windowed;
}


function btn_MainMenu_OnClick(GUIControl *control, MouseButton button)
{
  MAINMENULAYER = 0;
}

function btn_Options_OnClick(GUIControl *control, MouseButton button)
{
  MAINMENULAYER = 1;
}

function btn_ExitGame_OnClick(GUIControl *control, MouseButton button)
{
  MAINMENULAYER = 2;
}

function btn_QuitGame_OnClick(GUIControl *control, MouseButton button)
{
  QuitGame(1);
}

function btnMainMenu_BacktoGame_OnClick(GUIControl *control, MouseButton button)
{
  gMainMenu.Visible = false;
}
